"Hello world"
'Hello world'
print("hello world")
print?
hello
?print
x <- 5
x
random.nums <- rnorm(50)
random.nums
set.seed(123)
random.nums2 <- rnorm(50)
random.nums2
rnorm(10, 20, 3)
mean(random.nums2)
c(1,3,5,2,11,9,3,9,12,3)
c(1,3,5,2,11,9,3,9,12,3) -> age
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
?c
sd(weight)
mean(weight)
summary(weight)
plot (age, weight)
my.model <- lm (weight ~ age)
my.model
summary(my.model)
install.packages("vcd")
library(vcd)
?Arthritis
View(Arthritis)
head(Arthritis)
tail(Arthritis)
rm(list=ls())
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
c(1,3,5,2,11,9,3,9,12,3) -> age
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
plot (age, weight)
my.model <- lm (weight ~ age)
summary(my.model)
mydata <- read_csv("yrbss_22.csv")
setwd("~/Documents/Spring 2022/Predictive Analytics/Data Wrangling")
mydata <- read_csv("yrbss_22.csv")
library(tidyverse)
mydata <- read_csv("yrbss_22.csv")
mydata <- read_csv("yrbss_22.csv")
mydata1 <- mydata %>% mutate(height_m = sqrt(stweight/bmi))
mydata2 <- mydata %>% mutate(bmi_group = case_when(bmi < 18.5 ~ "underweight",
bmi >= 18.5 & bmi <= 24.9 ~ "normal",
bmi > 24.9 & bmi <= 29.9 ~ "overweight",
bmi > 29.9 ~ "obese"))
View(mydata2)
mydata %>% mutate(bmi_high = (bmi > 30))
mydata %>% mutate(male = (sex == "Male"))
mydata %>% mutate(male = 1*(sex == "Male"))
mydata %>% mutate(grade_num = as.numerical(str_remove(grade,"th"))) %>% select(-grade)
mydata %>% mutate(grade_num = as.numeric(str_remove(grade,"th"))) %>% select(-grade)
?desc
?arrange
newdata <- read_csv("yrbss_22") %>%
mutate(grade_num = as.numeric(str_remove(grade,"th"))) %>%
filter(grade_num >= 11) %>% filter(!is.na(bmi)) %>%
mutate(bmi_normal = case_when(bmi >= 18.5 & bmi <= 24.9 ~ 1, 0)) %>%
arrange(desc(grade_num))
newdata <- read_csv("yrbss_22.csv") %>%
mutate(grade_num = as.numeric(str_remove(grade,"th"))) %>%
filter(grade_num >= 11) %>% filter(!is.na(bmi)) %>%
mutate(bmi_normal = case_when(bmi >= 18.5 & bmi <= 24.9 ~ 1, 0)) %>%
arrange(desc(grade_num))
newdata <- read_csv("yrbss_22.csv") %>%
mutate(grade_num = as.numeric(str_remove(grade,"th"))) %>%
filter(grade_num >= 11) %>% filter(!is.na(bmi)) %>%
mutate(bmi_normal = case_when(bmi >= 18.5 & bmi <= 24.9 ~ 1, bmi < 18.5 | bmi > 24.9 ~ 0)) %>%
arrange(desc(grade_num))
View(newdata)
newdata <- read_csv("yrbss_22.csv") %>%
mutate(grade_num = as.numeric(str_remove(grade,"th"))) %>%
filter(grade_num >= 11, !is.na(bmi)) %>%
mutate(bmi_normal = case_when(
bmi >= 18.5 & bmi <= 24.9 ~ 1, TRUE ~ 0)) %>% #True means every other value
arrange(desc(grade_num))
View(newdata)
rm(list = ls())
library(tidyverse)
# Read the data as a tibble
mydata <- read_csv("yrbss_22.csv")
mydata <- na.omit(mydata)
# Create an additional column that will be used as a row identifier
mydata <- mutate(mydata, id=1:nrow(mydata))
# Define the train and validate proportions and set the seed
t_prop <- 0.7
v_prop <- 0.2
set.seed(467)
# Create train set by selecting 70% of mydata randomly
train <- mydata %>% slice_sample(n = t_prop*nrow(mydata), replace=FALSE)
# First, remove the 70% selected as the train set from mydata.
# Then, from the remaining dataset, randomly select 20% as the validate set
validate <- mydata %>%
anti_join(train, by = 'id') %>%
slice_sample(n = v_prop*nrow(mydata), replace = FALSE)
# Remove the train and validate sets from mydata, which will give you the test set
test <- mydata %>%
anti_join(train, by = 'id') %>%
anti_join(validate, by = 'id')
# Remove the id column as it is not a part of the original data
train <- select(train, -id)
validate <- select(validate, -id)
test <- select(test, -id)
# Display the first 5 rows of each of the three new data frames.
head(train, 5)
head(validate, 5)
head(test, 5)
